|top
CLOCK_50 => CLOCK_50.IN3
RESET => RESET.IN3
PS2_DAT => PS2_DAT.IN1
PS2_CLK => PS2_CLK.IN1
HEX0[0] << hex:hex_display.display
HEX0[1] << hex:hex_display.display
HEX0[2] << hex:hex_display.display
HEX0[3] << hex:hex_display.display
HEX0[4] << hex:hex_display.display
HEX0[5] << hex:hex_display.display
HEX0[6] << hex:hex_display.display
AUDIO_OUT[0] << audio_player:audio_player_inst.audio_out
AUDIO_OUT[1] << audio_player:audio_player_inst.audio_out
AUDIO_OUT[2] << audio_player:audio_player_inst.audio_out
AUDIO_OUT[3] << audio_player:audio_player_inst.audio_out
AUDIO_OUT[4] << audio_player:audio_player_inst.audio_out
AUDIO_OUT[5] << audio_player:audio_player_inst.audio_out
AUDIO_OUT[6] << audio_player:audio_player_inst.audio_out
AUDIO_OUT[7] << audio_player:audio_player_inst.audio_out
AUDIO_OUT[8] << audio_player:audio_player_inst.audio_out
AUDIO_OUT[9] << audio_player:audio_player_inst.audio_out
AUDIO_OUT[10] << audio_player:audio_player_inst.audio_out
AUDIO_OUT[11] << audio_player:audio_player_inst.audio_out
AUDIO_OUT[12] << audio_player:audio_player_inst.audio_out
AUDIO_OUT[13] << audio_player:audio_player_inst.audio_out
AUDIO_OUT[14] << audio_player:audio_player_inst.audio_out
AUDIO_OUT[15] << audio_player:audio_player_inst.audio_out


|top|player:player_inst
clk => clk.IN1
reset => reset.IN1
command[0] => Decoder0.IN2
command[0] => Decoder1.IN2
command[0] => Decoder2.IN2
command[0] => Decoder3.IN2
command[0] => Decoder4.IN2
command[1] => Decoder0.IN1
command[1] => Decoder1.IN1
command[1] => Decoder2.IN1
command[1] => Decoder3.IN1
command[1] => Decoder4.IN1
command[2] => Decoder0.IN0
command[2] => Decoder1.IN0
command[2] => Decoder2.IN0
command[2] => Decoder3.IN0
command[2] => Decoder4.IN0
ld <= player_control:control.ld
p <= player_control:control.p
ps <= player_control:control.ps
pn <= player_control:control.pn
pp <= player_control:control.pp
song_index[0] <= player_control:control.song_index
song_index[1] <= player_control:control.song_index
song_index[2] <= player_control:control.song_index
song_index[3] <= player_control:control.song_index


|top|player:player_inst|player_control:control
Clock => song_index[0]~reg0.CLK
Clock => song_index[1]~reg0.CLK
Clock => song_index[2]~reg0.CLK
Clock => song_index[3]~reg0.CLK
Clock => CurState~1.DATAIN
Reset => CurState.OUTPUTSELECT
Reset => CurState.OUTPUTSELECT
Reset => CurState.OUTPUTSELECT
Reset => CurState.OUTPUTSELECT
Reset => CurState.OUTPUTSELECT
Reset => song_index.OUTPUTSELECT
Reset => song_index.OUTPUTSELECT
Reset => song_index.OUTPUTSELECT
Reset => song_index.OUTPUTSELECT
cmd[0] => Decoder0.IN4
cmd[0] => Equal0.IN4
cmd[1] => Decoder0.IN3
cmd[1] => Equal0.IN0
cmd[2] => Decoder0.IN2
cmd[2] => Equal0.IN3
cmd[3] => Decoder0.IN1
cmd[3] => Equal0.IN2
cmd[4] => Decoder0.IN0
cmd[4] => Equal0.IN1
ld <= <GND>
p <= <GND>
ps <= <GND>
pn <= <GND>
pp <= <GND>
song_index[0] <= song_index[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
song_index[1] <= song_index[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
song_index[2] <= song_index[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
song_index[3] <= song_index[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|keyboard_press_driver:keyboard_driver
CLOCK_50 => CLOCK_50.IN1
valid <= valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
makeBreak <= makeBreak~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[0] <= outCode[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[1] <= outCode[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[2] <= outCode[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[3] <= outCode[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[4] <= outCode[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[5] <= outCode[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[6] <= outCode[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[7] <= outCode[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PS2_DAT => PS2_DAT.IN1
PS2_CLK => PS2_CLK.IN1
reset => reset.IN1


|top|keyboard_press_driver:keyboard_driver|keyboard_inner_driver:kbd
keyboard_clk => filter[7].DATAIN
keyboard_data => shiftin.DATAB
keyboard_data => always3.IN1
clock50 => clock.CLK
reset => incnt.OUTPUTSELECT
reset => incnt.OUTPUTSELECT
reset => incnt.OUTPUTSELECT
reset => incnt.OUTPUTSELECT
reset => read_char.OUTPUTSELECT
reset => scan_code[1]~reg0.ENA
reset => scan_code[0]~reg0.ENA
reset => scan_code[2]~reg0.ENA
reset => scan_code[3]~reg0.ENA
reset => scan_code[4]~reg0.ENA
reset => scan_code[5]~reg0.ENA
reset => scan_code[6]~reg0.ENA
reset => scan_code[7]~reg0.ENA
reset => shiftin[0].ENA
reset => shiftin[1].ENA
reset => shiftin[2].ENA
reset => shiftin[3].ENA
reset => shiftin[4].ENA
reset => shiftin[5].ENA
reset => shiftin[6].ENA
reset => shiftin[7].ENA
reset => shiftin[8].ENA
reset => ready_set.ENA
read => scan_ready~reg0.ACLR
scan_ready <= scan_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[0] <= scan_code[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[1] <= scan_code[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[2] <= scan_code[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[3] <= scan_code[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[4] <= scan_code[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[5] <= scan_code[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[6] <= scan_code[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[7] <= scan_code[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|audio_player:audio_player_inst
clk => memory:mem.clk
clk => address[0].CLK
clk => address[1].CLK
clk => address[2].CLK
clk => address[3].CLK
clk => address[4].CLK
clk => address[5].CLK
clk => address[6].CLK
clk => address[7].CLK
clk => address[8].CLK
clk => address[9].CLK
reset => memory:mem.reset
reset => address.OUTPUTSELECT
reset => address.OUTPUTSELECT
reset => address.OUTPUTSELECT
reset => address.OUTPUTSELECT
reset => address.OUTPUTSELECT
reset => address.OUTPUTSELECT
reset => address.OUTPUTSELECT
reset => address.OUTPUTSELECT
reset => address.OUTPUTSELECT
reset => address.OUTPUTSELECT
play => address.OUTPUTSELECT
play => address.OUTPUTSELECT
play => address.OUTPUTSELECT
play => address.OUTPUTSELECT
play => address.OUTPUTSELECT
play => address.OUTPUTSELECT
play => address.OUTPUTSELECT
play => address.OUTPUTSELECT
play => address.OUTPUTSELECT
play => address.OUTPUTSELECT
audio_out[0] <= memory:mem.data_out[0]
audio_out[1] <= memory:mem.data_out[1]
audio_out[2] <= memory:mem.data_out[2]
audio_out[3] <= memory:mem.data_out[3]
audio_out[4] <= memory:mem.data_out[4]
audio_out[5] <= memory:mem.data_out[5]
audio_out[6] <= memory:mem.data_out[6]
audio_out[7] <= memory:mem.data_out[7]


|top|audio_player:audio_player_inst|memory:mem
clk => clk.IN1
reset => ~NO_FANOUT~
read_addr[0] => read_addr[0].IN1
read_addr[1] => read_addr[1].IN1
read_addr[2] => read_addr[2].IN1
read_addr[3] => read_addr[3].IN1
read_addr[4] => read_addr[4].IN1
read_addr[5] => read_addr[5].IN1
read_addr[6] => read_addr[6].IN1
read_addr[7] => read_addr[7].IN1
read_addr[8] => read_addr[8].IN1
read_addr[9] => read_addr[9].IN1
data_out[0] <= audio_memory:audio_mem.data_out
data_out[1] <= audio_memory:audio_mem.data_out
data_out[2] <= audio_memory:audio_mem.data_out
data_out[3] <= audio_memory:audio_mem.data_out
data_out[4] <= audio_memory:audio_mem.data_out
data_out[5] <= audio_memory:audio_mem.data_out
data_out[6] <= audio_memory:audio_mem.data_out
data_out[7] <= audio_memory:audio_mem.data_out
data_out[8] <= audio_memory:audio_mem.data_out
data_out[9] <= audio_memory:audio_mem.data_out
data_out[10] <= audio_memory:audio_mem.data_out
data_out[11] <= audio_memory:audio_mem.data_out
data_out[12] <= audio_memory:audio_mem.data_out
data_out[13] <= audio_memory:audio_mem.data_out
data_out[14] <= audio_memory:audio_mem.data_out
data_out[15] <= audio_memory:audio_mem.data_out


|top|audio_player:audio_player_inst|memory:mem|audio_memory:audio_mem
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => data_out[8]~reg0.CLK
clk => data_out[9]~reg0.CLK
clk => data_out[10]~reg0.CLK
clk => data_out[11]~reg0.CLK
clk => data_out[12]~reg0.CLK
clk => data_out[13]~reg0.CLK
clk => data_out[14]~reg0.CLK
clk => data_out[15]~reg0.CLK
address[0] => rom.RADDR
address[1] => rom.RADDR1
address[2] => rom.RADDR2
address[3] => rom.RADDR3
address[4] => rom.RADDR4
address[5] => rom.RADDR5
address[6] => rom.RADDR6
address[7] => rom.RADDR7
address[8] => rom.RADDR8
address[9] => rom.RADDR9
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= data_out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= data_out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= data_out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= data_out[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[12] <= data_out[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[13] <= data_out[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[14] <= data_out[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[15] <= data_out[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|hex:hex_display
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[1] => display.IN1
c[2] => display.IN0
c[2] => display.IN0
c[2] => display.IN0
c[2] => display.IN0
c[3] => display.IN1
c[3] => display.IN1
c[3] => display.IN1
c[3] => display.IN1
display[0] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display.DB_MAX_OUTPUT_PORT_TYPE


